openapi: 3.0.3
info:
  title: Between IMS
  version: 1.0.0
  description: An Internship matching system for everyone
paths:
  /api/cea_management/companies/:
    get:
      operationId: api_cea_management_companies_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - cea_management
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyList'
          description: ''
  /api/cea_management/ojt-coordinators/:
    get:
      operationId: api_cea_management_ojt_coordinators_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - cea_management
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetOJTCoordinator'
          description: ''
  /api/cea_management/ojt-coordinators/create/:
    post:
      operationId: api_cea_management_ojt_coordinators_create_create
      tags:
      - cea_management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OJTCoordinatorRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OJTCoordinatorRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OJTCoordinatorRegister'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OJTCoordinatorRegister'
          description: ''
  /api/cea_management/ojt-coordinators/remove/:
    put:
      operationId: api_cea_management_ojt_coordinators_remove_update
      tags:
      - cea_management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOJTCoordinator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GetOJTCoordinator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GetOJTCoordinator'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOJTCoordinator'
          description: ''
    patch:
      operationId: api_cea_management_ojt_coordinators_remove_partial_update
      tags:
      - cea_management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGetOJTCoordinator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGetOJTCoordinator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGetOJTCoordinator'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOJTCoordinator'
          description: ''
  /api/cea_management/ojt-coordinators/update/:
    put:
      operationId: api_cea_management_ojt_coordinators_update_update
      tags:
      - cea_management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditOJTCoordinator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EditOJTCoordinator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditOJTCoordinator'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditOJTCoordinator'
          description: ''
    patch:
      operationId: api_cea_management_ojt_coordinators_update_partial_update
      tags:
      - cea_management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEditOJTCoordinator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEditOJTCoordinator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEditOJTCoordinator'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditOJTCoordinator'
          description: ''
  /api/cea_management/partnerships/:
    get:
      operationId: api_cea_management_partnerships_list
      tags:
      - cea_management
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchoolPartnership'
          description: ''
  /api/cea_management/partnerships/create/:
    post:
      operationId: api_cea_management_partnerships_create_create
      tags:
      - cea_management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePartnership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreatePartnership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreatePartnership'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePartnership'
          description: ''
  /api/cea_management/partnerships/delete/:
    delete:
      operationId: api_cea_management_partnerships_delete_destroy
      tags:
      - cea_management
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/cea_management/students/:
    get:
      operationId: api_cea_management_students_list
      tags:
      - cea_management
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetApplicant'
          description: ''
  /api/client_application/application/request_document/:
    post:
      operationId: api_client_application_application_request_document_create
      tags:
      - client_application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestDocument'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestDocument'
          description: ''
  /api/client_application/application/send_document/:
    post:
      operationId: api_client_application_application_send_document_create
      tags:
      - client_application
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/client_application/clear_notifications/:
    delete:
      operationId: api_client_application_clear_notifications_destroy
      tags:
      - client_application
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/client_application/drop/application/:
    put:
      operationId: api_client_application_drop_application_update
      tags:
      - client_application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DropApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DropApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DropApplication'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DropApplication'
          description: ''
  /api/client_application/get/application_detail/:
    get:
      operationId: api_client_application_get_application_detail_list
      tags:
      - client_application
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationDetail'
          description: ''
  /api/client_application/get/applications/:
    get:
      operationId: api_client_application_get_applications_list
      tags:
      - client_application
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/client_application/notifications/:
    get:
      operationId: api_client_application_notifications_list
      tags:
      - client_application
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
          description: ''
  /api/client_application/remove/application/:
    put:
      operationId: api_client_application_remove_application_update
      tags:
      - client_application
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/client_application/update/application/:
    put:
      operationId: api_client_application_update_application_update
      tags:
      - client_application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateApplication'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApplication'
          description: ''
  /api/client_matching/bulk-delete/internship_posting/:
    put:
      operationId: api_client_matching_bulk_delete_internship_posting_update
      tags:
      - client_matching
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/client_matching/bulk-delete/person_in_charge/:
    delete:
      operationId: api_client_matching_bulk_delete_person_in_charge_destroy
      tags:
      - client_matching
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/client_matching/create/internship_posting/:
    post:
      operationId: api_client_matching_create_internship_posting_create
      tags:
      - client_matching
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInternshipPosting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateInternshipPosting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateInternshipPosting'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInternshipPosting'
          description: ''
  /api/client_matching/create/person_in_charge/:
    post:
      operationId: api_client_matching_create_person_in_charge_create
      tags:
      - client_matching
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePersonInCharge'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreatePersonInCharge'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreatePersonInCharge'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePersonInCharge'
          description: ''
  /api/client_matching/edit/applicant_document/:
    get:
      operationId: api_client_matching_edit_applicant_document_retrieve
      tags:
      - client_matching
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_client_matching_edit_applicant_document_update
      tags:
      - client_matching
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/client_matching/edit/internship_posting/:
    put:
      operationId: api_client_matching_edit_internship_posting_update
      tags:
      - client_matching
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/client_matching/edit/person_in_charge/:
    put:
      operationId: api_client_matching_edit_person_in_charge_update
      tags:
      - client_matching
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/client_matching/get/internship_postings/:
    get:
      operationId: api_client_matching_get_internship_postings_list
      tags:
      - client_matching
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternshipPostingList'
          description: ''
  /api/client_matching/in_practicum/:
    get:
      operationId: api_client_matching_in_practicum_retrieve
      tags:
      - client_matching
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/client_matching/internship_matching/:
    post:
      operationId: api_client_matching_internship_matching_create
      tags:
      - client_matching
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/client_matching/internship_posting/:
    get:
      operationId: api_client_matching_internship_posting_list
      tags:
      - client_matching
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternshipPostingList'
          description: ''
  /api/client_matching/internship_recommendations/:
    get:
      operationId: api_client_matching_internship_recommendations_list
      tags:
      - client_matching
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternshipRecommendationList'
          description: ''
  /api/client_matching/internship_recommendations/current/tap/:
    put:
      operationId: api_client_matching_internship_recommendations_current_tap_update
      tags:
      - client_matching
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/client_matching/person_in_charge/:
    get:
      operationId: api_client_matching_person_in_charge_list
      tags:
      - client_matching
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonInChargeList'
          description: ''
  /api/client_matching/report/posting/:
    post:
      operationId: api_client_matching_report_posting_create
      tags:
      - client_matching
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportPosting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportPosting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportPosting'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportPosting'
          description: ''
  /api/client_matching/toggle/internship_posting/:
    put:
      operationId: api_client_matching_toggle_internship_posting_update
      tags:
      - client_matching
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/lightcast/skills/:
    get:
      operationId: api_lightcast_skills_retrieve
      tags:
      - client_matching
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/ojt_management/endorsement_detail/:
    get:
      operationId: api_ojt_management_endorsement_detail_list
      tags:
      - ojt_management
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EndorsementDetail'
          description: ''
  /api/ojt_management/generate_endorsement_letter/:
    get:
      operationId: api_ojt_management_generate_endorsement_letter_retrieve
      tags:
      - ojt_management
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/ojt_management/partnered-companies/:
    get:
      operationId: api_ojt_management_partnered_companies_list
      tags:
      - ojt_management
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchoolPartnership'
          description: ''
  /api/ojt_management/request_endorsement/:
    post:
      operationId: api_ojt_management_request_endorsement_create
      tags:
      - ojt_management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEndorsement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestEndorsement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestEndorsement'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestEndorsement'
          description: ''
  /api/ojt_management/responded_endorsements/:
    get:
      operationId: api_ojt_management_responded_endorsements_list
      tags:
      - ojt_management
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EndorsementDetail'
          description: ''
  /api/ojt_management/students/:
    get:
      operationId: api_ojt_management_students_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - ojt_management
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetApplicant'
          description: ''
  /api/ojt_management/students/in_practicum/:
    get:
      operationId: api_ojt_management_students_in_practicum_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - ojt_management
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetApplicant'
          description: ''
  /api/ojt_management/students/in_practicum/end/:
    put:
      operationId: api_ojt_management_students_in_practicum_end_update
      tags:
      - ojt_management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePracticumStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdatePracticumStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdatePracticumStatus'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePracticumStatus'
          description: ''
    patch:
      operationId: api_ojt_management_students_in_practicum_end_partial_update
      tags:
      - ojt_management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePracticumStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePracticumStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePracticumStatus'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePracticumStatus'
          description: ''
  /api/ojt_management/students/reqeusting_practicum/:
    get:
      operationId: api_ojt_management_students_reqeusting_practicum_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - ojt_management
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetApplicant'
          description: ''
  /api/ojt_management/students/requesting_practicum/approve/:
    put:
      operationId: api_ojt_management_students_requesting_practicum_approve_update
      tags:
      - ojt_management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePracticumStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdatePracticumStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdatePracticumStatus'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePracticumStatus'
          description: ''
    patch:
      operationId: api_ojt_management_students_requesting_practicum_approve_partial_update
      tags:
      - ojt_management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePracticumStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePracticumStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePracticumStatus'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePracticumStatus'
          description: ''
  /api/ojt_management/students/requesting_practicum/enrollment_record/:
    get:
      operationId: api_ojt_management_students_requesting_practicum_enrollment_record_retrieve
      tags:
      - ojt_management
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollmentRecord'
          description: ''
  /api/ojt_management/students/requesting_practicum/reject/:
    put:
      operationId: api_ojt_management_students_requesting_practicum_reject_update
      tags:
      - ojt_management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePracticumStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdatePracticumStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdatePracticumStatus'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePracticumStatus'
          description: ''
    patch:
      operationId: api_ojt_management_students_requesting_practicum_reject_partial_update
      tags:
      - ojt_management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePracticumStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePracticumStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePracticumStatus'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePracticumStatus'
          description: ''
  /api/ojt_management/update_endorsement/:
    put:
      operationId: api_ojt_management_update_endorsement_update
      tags:
      - ojt_management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEndorsement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateEndorsement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateEndorsement'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEndorsement'
          description: ''
  /api/user_account/applicant/:
    get:
      operationId: api_user_account_applicant_list
      tags:
      - user_account
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetApplicant'
          description: ''
  /api/user_account/change-password/:
    put:
      operationId: api_user_account_change_password_update
      tags:
      - user_account
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/user_account/company/:
    get:
      operationId: api_user_account_company_list
      tags:
      - user_account
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCompany'
          description: ''
  /api/user_account/delete-account/:
    put:
      operationId: api_user_account_delete_account_update
      tags:
      - user_account
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/user_account/departments/:
    get:
      operationId: api_user_account_departments_list
      tags:
      - user_account
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Department'
          description: ''
  /api/user_account/edit-applicant/:
    put:
      operationId: api_user_account_edit_applicant_update
      tags:
      - user_account
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/user_account/edit-applicant/request-practicum/:
    put:
      operationId: api_user_account_edit_applicant_request_practicum_update
      tags:
      - ojt_management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePracticumStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdatePracticumStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdatePracticumStatus'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePracticumStatus'
          description: ''
    patch:
      operationId: api_user_account_edit_applicant_request_practicum_partial_update
      tags:
      - ojt_management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePracticumStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePracticumStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePracticumStatus'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePracticumStatus'
          description: ''
  /api/user_account/edit-company/:
    put:
      operationId: api_user_account_edit_company_update
      tags:
      - user_account
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/user_account/email/:
    get:
      operationId: api_user_account_email_list
      tags:
      - user_account
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetEmail'
          description: ''
  /api/user_account/forgot-password/:
    get:
      operationId: api_user_account_forgot_password_retrieve
      tags:
      - user_account
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_user_account_forgot_password_create
      tags:
      - user_account
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/user_account/forgot-password/{uidb64}/{token}/:
    get:
      operationId: api_user_account_forgot_password_retrieve_2
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - user_account
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_user_account_forgot_password_create_2
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - user_account
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/user_account/login/email/:
    post:
      operationId: api_user_account_login_email_create
      tags:
      - user_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailLogin'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                message: Email verified
          description: ''
  /api/user_account/login/token/:
    post:
      operationId: api_user_account_login_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - user_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyTokenObtainPair'
          description: ''
  /api/user_account/ojtcoordinator/:
    get:
      operationId: api_user_account_ojtcoordinator_list
      tags:
      - user_account
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetOJTCoordinator'
          description: ''
  /api/user_account/programs/:
    get:
      operationId: api_user_account_programs_list
      tags:
      - user_account
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProgramNested'
          description: ''
  /api/user_account/register/applicant/:
    post:
      operationId: api_user_account_register_applicant_create
      tags:
      - user_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicantRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicantRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicantRegister'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicantRegister'
          description: ''
  /api/user_account/register/applicant/school_verify/:
    post:
      operationId: api_user_account_register_applicant_school_verify_create
      tags:
      - user_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchoolEmailCheck'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SchoolEmailCheck'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SchoolEmailCheck'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                message: Institutional email is valid.
                email:
                - email
          description: ''
  /api/user_account/register/cea/:
    post:
      operationId: api_user_account_register_cea_create
      tags:
      - user_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CareerEmplacementAdminRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CareerEmplacementAdminRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CareerEmplacementAdminRegister'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CareerEmplacementAdminRegister'
          description: ''
  /api/user_account/register/company/:
    post:
      operationId: api_user_account_register_company_create
      tags:
      - user_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyRegister'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyRegister'
          description: ''
  /api/user_account/register/ojt_coordinator/:
    post:
      operationId: api_user_account_register_ojt_coordinator_create
      tags:
      - user_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OJTCoordinatorRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OJTCoordinatorRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OJTCoordinatorRegister'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OJTCoordinatorRegister'
          description: ''
  /api/user_account/reset-password/:
    post:
      operationId: api_user_account_reset_password_create
      tags:
      - user_account
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/user_account/schools/:
    get:
      operationId: api_user_account_schools_list
      tags:
      - user_account
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/School'
          description: ''
  /api/user_account/schools/departments/programs/:
    get:
      operationId: api_user_account_schools_departments_programs_list
      tags:
      - user_account
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NestedSchoolDepartmentProgram'
          description: ''
  /api/user_account/token/refresh/:
    post:
      operationId: api_user_account_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - user_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyTokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MyTokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MyTokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyTokenRefresh'
          description: ''
  /api/user_account/user/:
    get:
      operationId: api_user_account_user_list
      tags:
      - user_account
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetUser'
          description: ''
  /api/user_account/verify-email/:
    get:
      operationId: api_user_account_verify_email_retrieve
      tags:
      - user_account
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_user_account_verify_email_create
      tags:
      - user_account
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/user_account/verify-email/{uidb64}/{token}/:
    get:
      operationId: api_user_account_verify_email_retrieve_2
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - user_account
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_user_account_verify_email_create_2
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - user_account
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    ApplicantRegister:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        middle_initial:
          type: string
          writeOnly: true
          default: ''
        applicant_email:
          type: string
          format: email
          writeOnly: true
        school:
          type: string
          format: uuid
          nullable: true
        password:
          type: string
          writeOnly: true
        confirm_password:
          type: string
          writeOnly: true
        department:
          type: integer
          nullable: true
        program:
          type: integer
          nullable: true
        academic_program:
          type: string
          nullable: true
          maxLength: 100
        hard_skills:
          type: string
        soft_skills:
          type: string
        address:
          type: string
          maxLength: 255
        preferred_modality:
          $ref: '#/components/schemas/PreferredModalityEnum'
        quick_introduction:
          type: string
          maxLength: 500
        resume:
          type: string
          format: uri
        enrollment_record:
          type: string
          format: uri
          nullable: true
      required:
      - address
      - applicant_email
      - confirm_password
      - first_name
      - hard_skills
      - last_name
      - password
      - quick_introduction
      - soft_skills
    ApplicantStatusEnum:
      enum:
      - Read
      - Unread
      - Deleted
      type: string
      description: |-
        * `Read` - Read
        * `Unread` - Unread
        * `Deleted` - Deleted
    ApplicationDetail:
      type: object
      properties:
        company_email:
          type: string
        company_name:
          type: string
        internship_position:
          type: string
        company_address:
          type: string
        application_modality:
          type: string
        internship_date_start:
          type: string
          format: date-time
        application_deadline:
          type: string
          format: date-time
        date_created:
          type: string
          format: date-time
        other_requirements:
          type: string
        key_tasks:
          type: string
          readOnly: true
        min_qualifications:
          type: string
          readOnly: true
        benefits:
          type: string
          readOnly: true
        company_information:
          type: string
        company_status:
          $ref: '#/components/schemas/CompanyStatusEnum'
        company_website_url:
          type: string
        linkedin_url:
          type: string
        facebook_url:
          type: string
        instagram_url:
          type: string
        x_url:
          type: string
        other_url:
          type: string
        profile_picture:
          type: string
          readOnly: true
        applicant_name:
          type: string
          readOnly: true
        applicant_email:
          type: string
          readOnly: true
        applicant_address:
          type: string
          readOnly: true
        applicant_modality:
          type: string
          readOnly: true
        applicant_program:
          type: string
          readOnly: true
        applicant_academic_program:
          type: string
          readOnly: true
        applicant_resume:
          type: string
          readOnly: true
        applicant_status:
          $ref: '#/components/schemas/ApplicantStatusEnum'
        application_id:
          type: string
          format: uuid
          readOnly: true
        application_status:
          type: string
      required:
      - applicant_academic_program
      - applicant_address
      - applicant_email
      - applicant_modality
      - applicant_name
      - applicant_program
      - applicant_resume
      - application_deadline
      - application_id
      - application_modality
      - application_status
      - benefits
      - company_address
      - company_email
      - company_information
      - company_name
      - company_website_url
      - date_created
      - facebook_url
      - instagram_url
      - internship_date_start
      - internship_position
      - key_tasks
      - linkedin_url
      - min_qualifications
      - other_requirements
      - other_url
      - profile_picture
      - x_url
    ApplicationList:
      type: object
      properties:
        company_name:
          type: string
        internship_position:
          type: string
        company_address:
          type: string
        profile_picture:
          type: string
          readOnly: true
        applicant_name:
          type: string
          readOnly: true
        applicant_address:
          type: string
        application_id:
          type: string
          format: uuid
          readOnly: true
        status:
          $ref: '#/components/schemas/Status779Enum'
        application_date:
          type: string
          format: date-time
          readOnly: true
        applicant_status:
          $ref: '#/components/schemas/ApplicantStatusEnum'
        company_status:
          $ref: '#/components/schemas/CompanyStatusEnum'
      required:
      - applicant_address
      - applicant_name
      - application_date
      - application_id
      - company_address
      - company_name
      - internship_position
      - profile_picture
    CareerEmplacementAdminRegister:
      type: object
      properties:
        cea_email:
          type: string
          format: email
          writeOnly: true
        password:
          type: string
          writeOnly: true
        confirm_password:
          type: string
          writeOnly: true
        school:
          type: string
          format: uuid
      required:
      - cea_email
      - confirm_password
      - password
      - school
    CompanyList:
      type: object
      properties:
        company_uuid:
          type: string
          format: uuid
        company_name:
          type: string
          maxLength: 255
        company_address:
          type: string
          maxLength: 255
        business_nature:
          type: string
          maxLength: 100
      required:
      - business_nature
      - company_address
      - company_name
      - company_uuid
    CompanyRegister:
      type: object
      properties:
        company_name:
          type: string
          maxLength: 255
        company_address:
          type: string
          maxLength: 255
        company_website_url:
          type: string
          nullable: true
        company_email:
          type: string
          format: email
          writeOnly: true
        password:
          type: string
          writeOnly: true
        confirm_password:
          type: string
          writeOnly: true
        company_information:
          type: string
          maxLength: 500
        business_nature:
          type: string
          maxLength: 100
        profile_picture:
          type: string
          format: uri
        background_image:
          type: string
          format: uri
      required:
      - background_image
      - business_nature
      - company_address
      - company_email
      - company_information
      - company_name
      - company_website_url
      - confirm_password
      - password
      - profile_picture
    CompanyStatusEnum:
      enum:
      - Read
      - Unread
      - Deleted
      type: string
      description: |-
        * `Read` - Read
        * `Unread` - Unread
        * `Deleted` - Deleted
    CreateInternshipPosting:
      type: object
      properties:
        internship_position:
          type: string
          maxLength: 100
        address:
          type: string
          nullable: true
          maxLength: 255
        modality:
          $ref: '#/components/schemas/ModalityEnum'
        internship_date_start:
          type: string
          format: date-time
        ojt_hours:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        application_deadline:
          type: string
          format: date-time
          nullable: true
        person_in_charge:
          type: string
          format: uuid
        other_requirements:
          type: string
          nullable: true
          maxLength: 255
        key_tasks:
          type: string
        min_qualifications:
          type: string
        benefits:
          type: string
        required_hard_skills:
          type: string
        required_soft_skills:
          type: string
        is_paid_internship:
          type: boolean
        is_only_for_practicum:
          type: boolean
        status:
          $ref: '#/components/schemas/Status23eEnum'
      required:
      - benefits
      - internship_date_start
      - internship_position
      - key_tasks
      - min_qualifications
      - ojt_hours
      - person_in_charge
      - required_hard_skills
      - required_soft_skills
    CreatePartnership:
      type: object
      properties:
        company_uuids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
      required:
      - company_uuids
    CreatePersonInCharge:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        position:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 100
        mobile_number:
          type: string
          nullable: true
          maxLength: 15
        landline_number:
          type: string
          nullable: true
          maxLength: 20
      required:
      - email
      - name
      - position
    Department:
      type: object
      properties:
        department_id:
          type: integer
          readOnly: true
        department_name:
          type: string
          maxLength: 100
      required:
      - department_id
      - department_name
    DepartmentNested:
      type: object
      properties:
        department_id:
          type: integer
          readOnly: true
        department_name:
          type: string
          readOnly: true
        programs:
          type: array
          items:
            $ref: '#/components/schemas/ProgramNested'
          readOnly: true
      required:
      - department_id
      - department_name
      - programs
    DropApplication:
      type: object
      properties:
        application_id:
          type: string
          format: uuid
          readOnly: true
        status:
          $ref: '#/components/schemas/Status779Enum'
      required:
      - application_id
    EditOJTCoordinator:
      type: object
      properties:
        ojtcoordinator_email:
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string
        middle_initial:
          type: string
          default: ''
        password:
          type: string
          writeOnly: true
        confirm_password:
          type: string
          writeOnly: true
        program:
          type: integer
          nullable: true
        status:
          type: string
        program_logo:
          type: string
          format: uri
          nullable: true
        signature:
          type: string
          format: uri
          nullable: true
    EmailLogin:
      type: object
      properties:
        email:
          type: string
          format: email
        status:
          type: string
          readOnly: true
      required:
      - email
      - status
    EndorsementDetail:
      type: object
      properties:
        endorsement_id:
          type: string
          format: uuid
          readOnly: true
        student_email:
          type: string
          format: email
        student_name:
          type: string
          readOnly: true
        internship_position:
          type: string
        company_name:
          type: string
        company_address:
          type: string
        internship_address:
          type: string
        business_nature:
          type: string
        company_website_url:
          type: string
        person_in_charge:
          type: string
        person_in_charge_position:
          type: string
        person_in_charge_email:
          type: string
        person_in_charge_mobile_number:
          type: string
        person_in_charge_landline_number:
          type: string
        resume:
          type: string
          readOnly: true
        key_tasks:
          type: string
          readOnly: true
        comments:
          type: string
          nullable: true
          maxLength: 500
        date_approved:
          type: string
          format: date-time
          nullable: true
        ojt_hours:
          type: string
        status:
          $ref: '#/components/schemas/Status55bEnum'
      required:
      - business_nature
      - company_address
      - company_name
      - company_website_url
      - endorsement_id
      - internship_address
      - internship_position
      - key_tasks
      - ojt_hours
      - person_in_charge
      - person_in_charge_email
      - person_in_charge_landline_number
      - person_in_charge_mobile_number
      - person_in_charge_position
      - resume
      - student_email
      - student_name
    EnrollmentRecord:
      type: object
      properties:
        enrollment_record:
          type: string
          format: uri
          nullable: true
    GetApplicant:
      type: object
      properties:
        user:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
        school:
          type: string
          nullable: true
        department:
          type: string
          nullable: true
        program:
          type: string
          nullable: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        middle_initial:
          type: string
          nullable: true
          maxLength: 20
        address:
          type: string
          maxLength: 255
        hard_skills:
          type: string
          readOnly: true
        soft_skills:
          type: string
          readOnly: true
        in_practicum:
          $ref: '#/components/schemas/InPracticumEnum'
        preferred_modality:
          $ref: '#/components/schemas/PreferredModalityEnum'
        academic_program:
          type: string
          nullable: true
          maxLength: 100
        quick_introduction:
          type: string
          maxLength: 500
        resume:
          type: string
          format: uri
        enrollment_record:
          type: string
          format: uri
          nullable: true
        verified_at:
          type: string
          format: date-time
      required:
      - address
      - department
      - email
      - first_name
      - hard_skills
      - last_name
      - program
      - quick_introduction
      - school
      - soft_skills
      - user
      - verified_at
    GetCompany:
      type: object
      properties:
        user:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
        company_name:
          type: string
          maxLength: 255
        company_address:
          type: string
          maxLength: 255
        company_information:
          type: string
          maxLength: 500
        business_nature:
          type: string
          maxLength: 100
        company_website_url:
          type: string
          nullable: true
          maxLength: 255
        linkedin_url:
          type: string
          nullable: true
          maxLength: 255
        facebook_url:
          type: string
          nullable: true
          maxLength: 255
        instagram_url:
          type: string
          nullable: true
          maxLength: 255
        x_url:
          type: string
          nullable: true
          maxLength: 255
        other_url:
          type: string
          nullable: true
          maxLength: 255
        background_image:
          type: string
          format: uri
        profile_picture:
          type: string
          format: uri
        verified_at:
          type: string
          format: date-time
      required:
      - background_image
      - business_nature
      - company_address
      - company_information
      - company_name
      - email
      - profile_picture
      - user
      - verified_at
    GetEmail:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
          readOnly: true
        verified_at:
          type: string
          format: date-time
          nullable: true
        user_role:
          $ref: '#/components/schemas/UserRoleEnum'
        status:
          $ref: '#/components/schemas/StatusE9dEnum'
      required:
      - user_id
    GetOJTCoordinator:
      type: object
      properties:
        user:
          type: string
          format: uuid
          readOnly: true
        ojt_coordinator_id:
          type: integer
          readOnly: true
        program:
          allOf:
          - $ref: '#/components/schemas/Program'
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        middle_initial:
          type: string
          nullable: true
          maxLength: 20
        email:
          type: string
          format: email
          readOnly: true
        status:
          type: string
        program_logo:
          type: string
          format: uri
          nullable: true
        signature:
          type: string
          format: uri
          nullable: true
      required:
      - email
      - first_name
      - last_name
      - ojt_coordinator_id
      - program
      - status
      - user
    GetUser:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 100
        verified_at:
          type: string
          format: date-time
          nullable: true
        user_role:
          $ref: '#/components/schemas/UserRoleEnum'
        status:
          $ref: '#/components/schemas/StatusE9dEnum'
      required:
      - email
    InPracticumEnum:
      enum:
      - 'No'
      - Pending
      - 'Yes'
      type: string
      description: |-
        * `No` - No
        * `Pending` - Pending
        * `Yes` - Yes
    InternshipPostingList:
      type: object
      properties:
        internship_posting_id:
          type: string
          format: uuid
          readOnly: true
        internship_position:
          type: string
          maxLength: 100
        address:
          type: string
          nullable: true
          maxLength: 255
        other_requirements:
          type: string
          nullable: true
          maxLength: 255
        is_paid_internship:
          type: boolean
        is_only_for_practicum:
          type: boolean
        internship_date_start:
          type: string
          format: date-time
        ojt_hours:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        application_deadline:
          type: string
          format: date-time
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_modified:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/Status23eEnum'
        modality:
          $ref: '#/components/schemas/ModalityEnum'
        company_name:
          type: string
        person_in_charge:
          type: string
          format: uuid
        person_in_charge_name:
          type: string
        required_hard_skills:
          type: string
          readOnly: true
        required_soft_skills:
          type: string
          readOnly: true
        key_tasks:
          type: string
          readOnly: true
        min_qualifications:
          type: string
          readOnly: true
        benefits:
          type: string
          readOnly: true
      required:
      - benefits
      - company_name
      - date_created
      - date_modified
      - internship_date_start
      - internship_position
      - internship_posting_id
      - key_tasks
      - min_qualifications
      - ojt_hours
      - person_in_charge
      - person_in_charge_name
      - required_hard_skills
      - required_soft_skills
    InternshipRecommendationList:
      type: object
      properties:
        company_name:
          type: string
        background_image:
          type: string
          readOnly: true
        profile_picture:
          type: string
          readOnly: true
        position:
          type: string
        address:
          type: string
        modality:
          type: string
        ojt_hours:
          type: integer
        key_tasks:
          type: string
          readOnly: true
        min_qualifications:
          type: string
          readOnly: true
        benefits:
          type: string
          readOnly: true
        required_hard_skills:
          type: string
          readOnly: true
        required_soft_skills:
          type: string
          readOnly: true
        other_requirements:
          type: string
        application_deadline:
          type: string
          format: date-time
        date_created:
          type: string
          format: date-time
        internship_date_start:
          type: string
          format: date-time
        person_in_charge:
          type: string
        recommendation_id:
          type: integer
          readOnly: true
        similarity_score:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,4})?$
        status:
          $ref: '#/components/schemas/InternshipRecommendationListStatusEnum'
        internship_posting:
          type: string
          format: uuid
        is_paid_internship:
          type: boolean
        is_only_for_practicum:
          type: boolean
      required:
      - address
      - application_deadline
      - background_image
      - benefits
      - company_name
      - date_created
      - internship_date_start
      - internship_posting
      - is_only_for_practicum
      - is_paid_internship
      - key_tasks
      - min_qualifications
      - modality
      - ojt_hours
      - other_requirements
      - person_in_charge
      - position
      - profile_picture
      - recommendation_id
      - required_hard_skills
      - required_soft_skills
    InternshipRecommendationListStatusEnum:
      enum:
      - Pending
      - Viewed
      - Submitted
      - Skipped
      type: string
      description: |-
        * `Pending` - Pending
        * `Viewed` - Viewed
        * `Submitted` - Submitted
        * `Skipped` - Skipped
    ModalityEnum:
      enum:
      - Onsite
      - WorkFromHome
      - Hybrid
      type: string
      description: |-
        * `Onsite` - Onsite
        * `WorkFromHome` - WorkFromHome
        * `Hybrid` - Hybrid
    MyTokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    MyTokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    NestedSchoolDepartmentProgram:
      type: object
      properties:
        school_id:
          type: string
          format: uuid
          readOnly: true
        school_name:
          type: string
          readOnly: true
        departments:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentNested'
          readOnly: true
      required:
      - departments
      - school_id
      - school_name
    Notification:
      type: object
      properties:
        notification_id:
          type: integer
          readOnly: true
        application:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
          readOnly: true
        notification_text:
          type: string
          maxLength: 300
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        internship_position:
          type: string
          readOnly: true
      required:
      - application
      - created_at
      - internship_position
      - notification_id
      - notification_text
      - notification_type
    NotificationTypeEnum:
      enum:
      - Applicant
      - Company
      type: string
      description: |-
        * `Applicant` - Applicant
        * `Company` - Company
    OJTCoordinatorRegister:
      type: object
      properties:
        ojtcoordinator_email:
          type: string
          format: email
          writeOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        middle_initial:
          type: string
          writeOnly: true
          default: ''
        password:
          type: string
          writeOnly: true
        confirm_password:
          type: string
          writeOnly: true
        program:
          type: integer
          nullable: true
        status:
          type: string
          default: Active
        program_logo:
          type: string
          format: uri
          nullable: true
        signature:
          type: string
          format: uri
          nullable: true
      required:
      - confirm_password
      - first_name
      - last_name
      - ojtcoordinator_email
      - password
    PatchedEditOJTCoordinator:
      type: object
      properties:
        ojtcoordinator_email:
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string
        middle_initial:
          type: string
          default: ''
        password:
          type: string
          writeOnly: true
        confirm_password:
          type: string
          writeOnly: true
        program:
          type: integer
          nullable: true
        status:
          type: string
        program_logo:
          type: string
          format: uri
          nullable: true
        signature:
          type: string
          format: uri
          nullable: true
    PatchedGetOJTCoordinator:
      type: object
      properties:
        user:
          type: string
          format: uuid
          readOnly: true
        ojt_coordinator_id:
          type: integer
          readOnly: true
        program:
          allOf:
          - $ref: '#/components/schemas/Program'
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        middle_initial:
          type: string
          nullable: true
          maxLength: 20
        email:
          type: string
          format: email
          readOnly: true
        status:
          type: string
        program_logo:
          type: string
          format: uri
          nullable: true
        signature:
          type: string
          format: uri
          nullable: true
    PatchedUpdatePracticumStatus:
      type: object
      properties:
        in_practicum:
          type: string
          maxLength: 10
    PersonInChargeList:
      type: object
      properties:
        person_in_charge_id:
          type: string
          format: uuid
          readOnly: true
        company_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        position:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 100
        mobile_number:
          type: string
          nullable: true
          maxLength: 15
        landline_number:
          type: string
          nullable: true
          maxLength: 20
      required:
      - company_name
      - email
      - name
      - person_in_charge_id
      - position
    PreferredModalityEnum:
      enum:
      - Onsite
      - WorkFromHome
      - Hybrid
      type: string
      description: |-
        * `Onsite` - Onsite
        * `WorkFromHome` - WorkFromHome
        * `Hybrid` - Hybrid
    Program:
      type: object
      properties:
        program_id:
          type: integer
          readOnly: true
        program_name:
          type: string
          maxLength: 100
      required:
      - program_id
      - program_name
    ProgramNested:
      type: object
      properties:
        program_id:
          type: integer
          readOnly: true
        program_name:
          type: string
          readOnly: true
      required:
      - program_id
      - program_name
    ReportPosting:
      type: object
      properties:
        internship_posting_id:
          type: string
          format: uuid
          writeOnly: true
        internship_posting:
          type: string
          format: uuid
          readOnly: true
        description:
          type: string
          maxLength: 500
      required:
      - description
      - internship_posting
      - internship_posting_id
    RequestDocument:
      type: object
      properties:
        application_id:
          type: string
          format: uuid
        document_list:
          type: string
          maxLength: 500
        message:
          type: string
          nullable: true
          maxLength: 500
      required:
      - application_id
      - document_list
      - message
    RequestEndorsement:
      type: object
      properties:
        endorsement_id:
          type: string
          format: uuid
          readOnly: true
        program_id:
          type: integer
          readOnly: true
        application:
          type: string
          format: uuid
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/Status55bEnum'
          readOnly: true
        comments:
          type: string
          nullable: true
          maxLength: 500
        date_approved:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        student_name:
          type: string
          readOnly: true
      required:
      - application
      - date_approved
      - endorsement_id
      - program_id
      - status
      - student_name
    School:
      type: object
      properties:
        school_id:
          type: string
          format: uuid
          readOnly: true
        school_name:
          type: string
          maxLength: 255
      required:
      - school_id
      - school_name
    SchoolEmailCheck:
      type: object
      properties:
        email:
          type: string
          format: email
        school_id:
          type: string
          format: uuid
      required:
      - email
      - school_id
    SchoolPartnership:
      type: object
      properties:
        company_uuid:
          type: string
          format: uuid
          readOnly: true
        company_name:
          type: string
          readOnly: true
        company_address:
          type: string
          readOnly: true
        business_nature:
          type: string
          readOnly: true
      required:
      - business_nature
      - company_address
      - company_name
      - company_uuid
    Status23eEnum:
      enum:
      - Open
      - Closed
      - Expired
      - Deleted
      type: string
      description: |-
        * `Open` - Open
        * `Closed` - Closed
        * `Expired` - Expired
        * `Deleted` - Deleted
    Status55bEnum:
      enum:
      - Pending
      - Approved
      - Rejected
      - Deleted
      type: string
      description: |-
        * `Pending` - Pending
        * `Approved` - Approved
        * `Rejected` - Rejected
        * `Deleted` - Deleted
    Status779Enum:
      enum:
      - Pending
      - Confirmed
      - Rejected
      - Dropped
      type: string
      description: |-
        * `Pending` - Pending
        * `Confirmed` - Confirmed
        * `Rejected` - Rejected
        * `Dropped` - Dropped
    StatusE9dEnum:
      enum:
      - Active
      - Inactive
      - Deleted
      - Pending
      - Suspended
      type: string
      description: |-
        * `Active` - Active
        * `Inactive` - Inactive
        * `Deleted` - Deleted
        * `Pending` - Pending
        * `Suspended` - Suspended
    UpdateApplication:
      type: object
      properties:
        application_id:
          type: string
          format: uuid
          readOnly: true
        status:
          $ref: '#/components/schemas/Status779Enum'
      required:
      - application_id
    UpdateEndorsement:
      type: object
      properties:
        endorsement_id:
          type: string
          format: uuid
          readOnly: true
        status:
          $ref: '#/components/schemas/Status55bEnum'
        comments:
          type: string
          nullable: true
          maxLength: 500
      required:
      - endorsement_id
    UpdatePracticumStatus:
      type: object
      properties:
        in_practicum:
          type: string
          maxLength: 10
      required:
      - in_practicum
    UserRoleEnum:
      enum:
      - admin
      - applicant
      - company
      - cea
      - coordinator
      type: string
      description: |-
        * `admin` - admin
        * `applicant` - applicant
        * `company` - company
        * `cea` - cea
        * `coordinator` - coordinator
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
